pipeline {
    agent { label 'master' }
    environment {
        //variable for image name
        PROJECT = "maybeach-integration"
        APP = "maybeach-integration"
    }
    tools {
        maven 'mvn339'
        jdk 'jdk17'
    }
    stages {
        stage ('Initialize') {
            steps {
                deleteDir()
                googlechatnotification (url: 'https://chat.googleapis.com/v1/spaces/AAAARYavsfY/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=RSNDNcJgOPst2Lvi_QYs_KFcAFl_df_cEE-_PRyIIKE%3D', message: "Initializing build process for *${env.JOB_NAME}* , CURRENT_BRANCH: *${env.GIT_BRANCH}*")
                slackSend teamDomain: "sfxng", token: "${env.SLACK_TOKEN_NIMC}", channel: "nimc-test-pipeline", color: "warning", message: "Initializing build process for *${env.JOB_NAME}*\n\nCURRENT_BRANCH: *${env.GIT_BRANCH}*"
                
            }   
        }
        stage ('Clean WorkSpace') {
            steps {
                checkout scm
            }  
        }
        stage ('Build') {
            steps {
                script {
                            env.OLD_VERSION = sh(returnStdout: true, script: 'mvn help:evaluate -Dexpression=project.version -q -DforceStdout')
                            env.VERSION = env.OLD_VERSION + '-' + env.BUILD_NUMBER
                        }
                        sh 'mvn clean package'
                echo 'Running build automation'
                // sh 'mvn clean package -U'
                archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                googlechatnotification (url: 'https://chat.googleapis.com/v1/spaces/AAAARYavsfY/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=RSNDNcJgOPst2Lvi_QYs_KFcAFl_df_cEE-_PRyIIKE%3D', message: "Build for *${env.JOB_NAME}* ongoing, CURRENT_BRANCH: *${env.GIT_BRANCH}*")
                slackSend teamDomain: "sfxng", token: "${env.SLACK_TOKEN_NIMC}", channel: "nimc-test-pipeline", color: "warning", message: "Build for *${env.JOB_NAME}* ongoing\n\nCURRENT_BRANCH: *${env.GIT_BRANCH}*"  
                  }
               }
               
        // stage('SonarCloud analysis') {
        //         tools {
        //             jdk 'jdk11' 
        //         }
                
        //     steps {
        //         withSonarQubeEnv('SonarCloud') {
        //             sh 'mvn sonar:sonar ' + 
        //             '-Dproject.settings=./sonar-project.properties'
        //             }
        //          googlechatnotification (url: 'https://chat.googleapis.com/v1/spaces/AAAARYavsfY/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=RSNDNcJgOPst2Lvi_QYs_KFcAFl_df_cEE-_PRyIIKE%3D', message: "SonarCloud Code analysis for *${env.JOB_NAME}* ongoing, CURRENT_BRANCH: *${env.GIT_BRANCH}*")
        //          slackSend teamDomain: "sfxng", token: "${env.SLACK_TOKEN_NIMC}", channel: "nimc-test-pipeline", color: "warning", message: "SonarCloud Code analysis for *${env.JOB_NAME}* ongoing\n\nCURRENT_BRANCH: *${env.GIT_BRANCH}*"  
        //         }
        //     }
            
        stage("deploy") {
                steps {
                    build job: 'nimc-test-deploy-spring-2',
                        parameters: [
                            string(name: 'ENVIRONMENT', value: 'test'),
							string(name: 'JENKINS_JOB', value: 'nimc-maybeach-integration'),
                            string(name: 'INSTANCE', value: 'nimc-maybeach-integration'),
                            string(name: 'CURRENT_COMPONENT', value: 'maybeach-integration'),
                            string(name: 'PROJECT', value: 'maybeach-integration'),
                            string(name: 'SERVICE', value: 'maybeach-integration')
                        ]
                    googlechatnotification (url: 'https://chat.googleapis.com/v1/spaces/AAAARYavsfY/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=RSNDNcJgOPst2Lvi_QYs_KFcAFl_df_cEE-_PRyIIKE%3D', message: "Deployment for *${env.JOB_NAME}* ongoing, CURRENT_BRANCH: *${env.GIT_BRANCH}*")
                    slackSend teamDomain: "sfxng", token: "${env.SLACK_TOKEN_NIMC}", channel: "nimc-test-pipeline", color: "warning", message: "Deployment for *${env.JOB_NAME}* ongoing\n\nCURRENT_BRANCH: *${env.GIT_BRANCH}*"  
                }
            }
        
        }

    post {  
        success {  
            googlechatnotification (url: 'https://chat.googleapis.com/v1/spaces/AAAARYavsfY/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=RSNDNcJgOPst2Lvi_QYs_KFcAFl_df_cEE-_PRyIIKE%3D', message: "Deployment successful for *${env.JOB_NAME}*\n\nView the log at:\n (<${env.BUILD_URL}/console|Open>)\n\nBranch deployed is CURRENT_BRANCH: *${env.GIT_BRANCH}*\n\n")
            slackSend teamDomain: "sfxng", token: "${env.SLACK_TOKEN_NIMC}", channel: "nimc-test-pipeline", color: "good", message: "Deployment successful for *${env.JOB_NAME}*\n\nView the log at:\n (<${env.BUILD_URL}/console|Open>)\n\nBranch deployed is CURRENT_BRANCH: *${env.GIT_BRANCH}*\n\n"  
        }  
        failure {  
            googlechatnotification (url: 'https://chat.googleapis.com/v1/spaces/AAAARYavsfY/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=RSNDNcJgOPst2Lvi_QYs_KFcAFl_df_cEE-_PRyIIKE%3D', message: "Deployment failed for *${env.JOB_NAME}*\n\nView the log at:\n (<${env.BUILD_URL}/console|Open>)\n\nCURRENT_BRANCH: *${env.GIT_BRANCH}*")
            slackSend teamDomain: "sfxng", token: "${env.SLACK_TOKEN_NIMC}", channel: "nimc-test-pipeline", color: "danger", message: "Deployment failed for *${env.JOB_NAME}*\n\nView the log at:\n (<${env.BUILD_URL}/console|Open>)\n\nCURRENT_BRANCH: *${env.GIT_BRANCH}*"
        }  
        aborted {
            googlechatnotification (url: 'https://chat.googleapis.com/v1/spaces/AAAARYavsfY/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=RSNDNcJgOPst2Lvi_QYs_KFcAFl_df_cEE-_PRyIIKE%3D', message: "Deployment aborted for *${env.JOB_NAME}*\n\nView the log at:\n (<${env.BUILD_URL}/console|Open>)\n\nCURRENT_BRANCH: *${env.GIT_BRANCH}*")
            slackSend teamDomain: "sfxng", token: "${env.SLACK_TOKEN_NIMC}", channel: "nimc-test-pipeline", color: "warning", message: "Deployment aborted for *${env.JOB_NAME}*\n\nView the log at:\n (<${env.BUILD_URL}/console|Open>)\n\nCURRENT_BRANCH: *${env.GIT_BRANCH}*"
        }
    }  
}
